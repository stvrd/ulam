primes
}
system.time(
GivePrimes(end=1e4)
)
GivePrimes <- function(start=1,end=1e3){
nn <- 1:end
primes <- vector(length = end-start+1)
for (i in nn[start:end]) {
if (min(i %% nn[2:(i-1)]) != 0) { primes[i] <- TRUE }
}
primes
}
GivePrimes <- function(start=1,end=1e3){
nn <- 1:end
primes <- vector(length = end-start+1)
for (i in nn[start:end]) {
if (min(i %% nn[2:(i-1)]) != 0) { primes[i] <- TRUE }
}
primes
}
GivePrimes(end=1e4)
GivePrimes <- function(start=1,end=1e3){
nn <- 1:end
primes <- vector(length = end-start+1)
for (i in nn[start:end]) {
if (min(i %% nn[2:(i-1)]) != 0) { primes[i] <- TRUE }
}
primes
}
GivePrimes(end=1e4)
pr <- GivePrimes(end=1e4)
pr[pr]
pr
is.true(pr)
which(pr)
sum(which(pr))
length(which(pr))
1:20
create.matrix <- function(vec) {
n <- sqrt(length(vec))
x <- ceiling(n/2+0.25)
y <- ceiling(n/2)
ulam <- matrix(nrow = n, ncol=n)
dir <- c("r","u","l","d")
n.rep <- rep(1:n,each=2)
dirs <- dir %>% rep(length.out=length(n.rep)) %>% rep(n.rep)
ulam[x,y] <- -1
for(i in 1:n^2) {
if (dirs[i]=="r") { y <- y+1
}  else if (dirs[i]=="u") { x <- x-1
}  else if (dirs[i]=="l") { y <- y-1
}  else if (dirs[i]=="d") { x <- x+1
}  else stop()
ulam[x,y] <- vec[i+1]
ulam
}
ulam
}
ulam <- function(n,plot=F) {
par(mar=c(2,1,2,1), mgp=c(0.4,0,0))
vec <- rep(TRUE,length = n^2)
vec[1:2] <- c(F,T)
for(i in 2:n){
if(!plot & i %% 100 == 0) print(i)
if(vec[i]) {
vec2 <- 1:n^2 %% i != 0
vec2[1:i] <- T
vec <- vec & vec2
# Plot image
if(plot){
tmp <- vec[i]
vec[i] <- -1
image(create.matrix(vec),axes=F,
col=c("yellow","White","Blue"),
xlab=paste("i =",i),
main="Ulam Spiral")
vec[i] <- tmp
Sys.sleep(0.1)
}
}
}
if(!plot) vec
}
ulam(100)
ulam(100,plot=T)
library(magrittr)
ulam(100,plot=T)
ulam(1000,plot=T)
ulam(500,plot=T)
# -------- Frequency of Primes: --------------------
n <- 1e3
pr <- ulam(n)
length(which(pr))
freq <- vector(length = n)
x <- 1:n*n
for(i in x){
if(i %% 1e5==0) print(i)
freq[i/1000] <- length(which(pr[1:i]))/i
}
plot(x,1/log(x),lty=2,lwd=2,type="l",col="blue",xlab="",ylab="")
points(x,freq,type="p",pch=16,cex=0.5)
title("Frequency of Prime Numbers")
plot(x,1/log(x),lty=2,lwd=2,type="l",col="blue",xlab="",ylab="")
points(x,freq,type="p",pch=16,cex=0.5)
title("Frequency of Prime Numbers")
runif(1)
runif(1)*5
runif(1)*100
round(runif(1)*100)
r <- round(runif(1)*100)
p <- 221
r^(p-1)
p <- 221
r <- round(runif(1)*100)
r^(p-1)
r
p
p
r^(p-1)
r <- round(runif(1)*50)
r^(p-1)
r <- 38
r^(p-1)
r^(p-1) %% p
p %% r^(p-1)
p %/% r^(p-1)
r^(p-1) %/% p
which(pr)
p <- 111
r <- 38
r^(p-1)
r^(p-1) %/% p
r^(p-1) %% p
p %% r^(p-1)
p %/% r^(p-1)
p %% r^(p-1)
freq
log(10)
log(1)
log(0)
1000^2
# -------- Frequency of Primes: --------------------
n <- 1e4
pr <- ulam(n)
p <- 13
a <- 7
p %% r^(p-1)
a^p/p
r^(p-1) %% p
p <- 13
a <- 10
a^(p-1)
a^(p-1) %% p
a <- round(runif(10)*50)
a
a^(p-1)
a^(p-1) %% p
a <- round(runif(10)*10)
a^(p-1) %% p
a <- 2
a^(p-1) %% p
a^(p-1) %% p
a <- 3
a^(p-1) %% p
a^p/p
a^(p-1) %% p
create.matrix <- function(vec) {
n <- sqrt(length(vec))
x <- ceiling(n/2+0.25)
y <- ceiling(n/2)
ulam <- matrix(nrow = n, ncol=n)
dir <- c("r","u","l","d")
n.rep <- rep(1:n,each=2)
dirs <- dir %>% rep(length.out=length(n.rep)) %>% rep(n.rep)
ulam[x,y] <- -1
for(i in 1:n^2) {
if (dirs[i]=="r") { y <- y+1
}  else if (dirs[i]=="u") { x <- x-1
}  else if (dirs[i]=="l") { y <- y-1
}  else if (dirs[i]=="d") { x <- x+1
}  else stop()
ulam[x,y] <- vec[i+1]
ulam
}
ulam
}
ulam <- function(n,plot=F) {
par(mar=c(2,1,2,1), mgp=c(0.4,0,0))
vec <- rep(TRUE,length = n^2)
vec[1:2] <- c(F,T)
for(i in 2:n){
if(!plot & i %% 100 == 0) print(i)
if(vec[i]) {
vec2 <- 1:n^2 %% i != 0
vec2[1:i] <- T
vec <- vec & vec2
# Plot image
if(plot){
tmp <- vec[i]
vec[i] <- -1
image(create.matrix(vec),axes=F,
col=c("yellow","White","Blue"),
xlab=paste("i =",i),
main="Ulam Spiral")
vec[i] <- tmp
Sys.sleep(0.1)
}
}
}
if(!plot) vec
}
library(magrittr)
# -------- Frequency of Primes: --------------------
n <- 1e4
# -------- Frequency of Primes: --------------------
n <- 1e3
pr <- ulam(n)
!pr
np <- which(!pr)
np
np <- which(!pr)[1:100]
np
np <- which(!pr)[1:50]
np
a <- 1:10
a^(np-1)
a <- 1:10
a^(np-1)
np-1
a
a%^%(np-1) %% p
a^(np-1) %% p
a^(np-1)
outer(X = a,Y = np-1, FUN="^"))
outer(X = a,Y = np-1, FUN="^")
fermat <- outer(X = a,Y = np-1, FUN="^")
fermat == 1
np
np <- which(!pr)[2:50]
fermat <- outer(X = a,Y = np-1, FUN="^")
fermat == 1
np-1
which(!pr)[2:50]
np <- which(!pr)[2:50]
a <- 1:10
a <- 1:10
fermat <- outer(X = a,Y = np-1, FUN="^")
fermat == 1
fermat
a
np <- which(!pr)[2:50]
a <- 2:10
fermat <- outer(X = a,Y = np-1, FUN="^")
fermat == 1
fermat
apply(fermat,2, FUN = . %% np)
apply(fermat,2, FUN = %% np)
%%
mod(4,2)
mod(4,3)
apply(fermat,2, FUN = mod(.,np))
apply(fermat,2, FUN = mod(np))
np
apply(fermat,1, FUN = mod(np))
setwd("~/R/ulam")
library(magrittr)
create.matrix <- function(vec) {
n <- sqrt(length(vec))
x <- ceiling(n/2+0.25)
y <- ceiling(n/2)
ulam <- matrix(nrow = n, ncol=n)
dir <- c("r","u","l","d")
n.rep <- rep(1:n,each=2)
dirs <- dir %>% rep(length.out=length(n.rep)) %>% rep(n.rep)
ulam[x,y] <- -1
for(i in 1:n^2) {
if (dirs[i]=="r") { y <- y+1
}  else if (dirs[i]=="u") { x <- x-1
}  else if (dirs[i]=="l") { y <- y-1
}  else if (dirs[i]=="d") { x <- x+1
}  else stop()
ulam[x,y] <- vec[i+1]
ulam
}
ulam
}
ulam <- function(n,plot=F) {
par(mar=c(2,1,2,1), mgp=c(0.4,0,0))
vec <- rep(TRUE,length = n^2)
vec[1:2] <- c(F,T)
for(i in 2:n){
if(!plot & i %% 100 == 0) print(i)
if(vec[i]) {
vec2 <- 1:n^2 %% i != 0
vec2[1:i] <- T
vec <- vec & vec2
# Plot image
if(plot){
tmp <- vec[i]
vec[i] <- -1
image(create.matrix(vec),axes=F,
col=c("yellow","White","Blue"),
xlab=paste("i =",i),
main="Ulam Spiral")
vec[i] <- tmp
Sys.sleep(0.1)
}
}
}
if(!plot) vec
}
ulam(100)
ulam(400,plot=T)
# -------- Frequency of Primes: --------------------
n <- 1e3
pr <- ulam(n)
length(which(pr))
freq <- vector(length = n)
x <- 1:n*n
for(i in x){
if(i %% 1e5==0) print(i)
freq[i/1000] <- length(which(pr[1:i]))/i
}
freq
1/log(10e3)
1/log(1e3)
log(1e3)
1/log(1e3)
plot(x,1/log(x),lty=2,lwd=2,type="l",col="blue",xlab="",ylab="")
points(x,freq,type="p",pch=16,cex=0.5)
1/log(1e3)
plot(x,1/log(x),lty=2,lwd=2,type="l",col="blue",xlab="",ylab="")
points(x,freq,type="p",pch=16,cex=0.5)
freq
1:n*n
freq
1/log(1e4)
1/log(10e3)
# ------------- Naive Approach ------------------------------------------
GivePrimes <- function(end,start=1,verbose=F){
nn <- 1:end
primes <- vector(length = end-start+1)
for (i in nn[start:end]) {
if(verbose) {if(i%%1000==0) cat(i," ")}
if (i==2) primes[i] <- {TRUE
} else if (min(i %% nn[2:(i-1)]) != 0) { primes[i] <- TRUE }
}
primes
}
GivePrimes(50)
pr <- GivePrimes(1e4,verbose = T)
vector(length = n/10)
vec <- vector(length = n/10)
vec[1] <- 2
vec
2:sqrt(n)
i <- 2
1:n %% i
ulam <- function(n,plot=F, long.vector=T) {
par(mar=c(2,1,2,1), mgp=c(0.4,0,0))
vec <- rep(TRUE,length = n^2)
vec[1:2] <- c(F,T)
for(i in 2:n){
if(!plot & i %% 100 == 0) print(i)
if(vec[i]) {
vec2 <- 1:n^2 %% i != 0
vec2[1:i] <- T
vec <- vec & vec2
# Plot image
if(plot){
tmp <- vec[i]
vec[i] <- -1
image(create.matrix(vec),axes=F,
col=c("yellow","White","Blue"),
xlab=paste("i =",i),
main="Ulam Spiral")
vec[i] <- tmp
Sys.sleep(0.1)
}
}
}
if(!plot)
}
ulam(100)
ulam(400,plot=T)
ulam <- function(n,plot=F, long.vector=T) {
par(mar=c(2,1,2,1), mgp=c(0.4,0,0))
vec <- rep(TRUE,length = n)
vec[1:2] <- c(F,T)
for(i in 2:n){
if(!plot & i %% 100 == 0) print(i)
if(vec[i]) {
vec2 <- 1:n^2 %% i != 0
vec2[1:i] <- T
vec <- vec & vec2
# Plot image
if(plot){
tmp <- vec[i]
vec[i] <- -1
image(create.matrix(vec),axes=F,
col=c("yellow","White","Blue"),
xlab=paste("i =",i),
main="Ulam Spiral")
vec[i] <- tmp
Sys.sleep(0.1)
}
}
}
if(!plot)
}
ulam(100)
which(ulam(1e3))
ulam(200,plot=T)
create.matrix(vec)
vec <- rep(TRUE,length = n)
create.matrix(vec)
library(magrittr)
create.matrix <- function(vec) {
n <- sqrt(length(vec))
x <- ceiling(n/2+0.25)
y <- ceiling(n/2)
ulam <- matrix(nrow = n, ncol=n)
dir <- c("r","u","l","d")
n.rep <- rep(1:n,each=2)
dirs <- dir %>% rep(length.out=length(n.rep)) %>% rep(n.rep)
ulam[x,y] <- -1
for(i in 1:n^2) {
if (dirs[i]=="r") { y <- y+1
}  else if (dirs[i]=="u") { x <- x-1
}  else if (dirs[i]=="l") { y <- y-1
}  else if (dirs[i]=="d") { x <- x+1
}  else stop()
ulam[x,y] <- vec[i+1]
ulam
}
ulam
}
ulam <- function(n,plot=F) {
par(mar=c(2,1,2,1), mgp=c(0.4,0,0))
vec <- rep(TRUE,length = n^2)
vec[1:2] <- c(F,T)
for(i in 2:n){
if(!plot & i %% 100 == 0) print(i)
if(vec[i]) {
vec2 <- 1:n^2 %% i != 0
vec2[1:i] <- T
vec <- vec & vec2
# Plot image
if(plot){
tmp <- vec[i]
vec[i] <- -1
image(create.matrix(vec),axes=F,
col=c("yellow","White","Blue"),
xlab=paste("i =",i),
main="Ulam Spiral")
vec[i] <- tmp
Sys.sleep(0.1)
}
}
}
if(!plot) vec
}
ulam(100)
ulam(300,plot=T)
ulam(20,plot=T)
ulam <- function(n,plot=F) {
par(mar=c(2,1,2,1), mgp=c(0.4,0,0))
vec <- rep(TRUE,length = n)
vec[1:2] <- c(F,T)
for(i in 2:n){
if(!plot & i %% 100 == 0) print(i)
if(vec[i]) {
vec2 <- 1:n^2 %% i != 0
vec2[1:i] <- T
vec <- vec & vec2
# Plot image
if(plot){
tmp <- vec[i]
vec[i] <- -1
image(create.matrix(vec),axes=F,
col=c("yellow","White","Blue"),
xlab=paste("i =",i),
main="Ulam Spiral")
vec[i] <- tmp
Sys.sleep(0.1)
}
}
}
if(!plot) vec
}
ulam(20,plot=T)
# -------- Frequency of Primes: --------------------
n <- 1e3
pr <- ulam(n)
# -------- Frequency of Primes: --------------------
n <- 1e4
pr <- ulam(n)
n <- 1e4
par(mar=c(2,1,2,1), mgp=c(0.4,0,0))
vec <- rep(TRUE,length = n)
vec[1:2] <- c(F,T)
i
vec[i]
1:n^2 %% i
vec2 <- 1:n^2 %% i != 0
vec2[1:i] <- T
vec <- vec & vec2
i <- 3
vec2 <- 1:n^2 %% i != 0
library(Rcpp)
?pow
